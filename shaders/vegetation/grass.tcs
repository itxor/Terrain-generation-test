#version 440 core

layout (vertices = 1) out;

uniform vec3 eyePosition;

in float offsY[];
out float tcs_offsY[];

int lod() {
    float dist = distance(gl_in[gl_InvocationID].gl_Position.xyz, eyePosition);
    if(dist < 10.0f) {
        return 48;
    }
    if(dist < 20.0f) {
        return 24;
    }
    if(dist < 80.0f) {
        return 12;
    }
    if(dist < 800.0f) {
        return 6;
    }
    return 4;
}

void main () {
    vec3 lookDirection = vec3(0.0f, 0.0f, -1.0f);
    gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;
    gl_TessLevelOuter[0] = gl_in[gl_InvocationID].gl_Position.w;
    float halfspaceCull =
        step(dot(eyePosition - gl_in[gl_InvocationID].gl_Position.xyz, lookDirection), 0);
    gl_TessLevelOuter[1] = lod() * halfspaceCull;
    tcs_offsY[gl_InvocationID] = offsY[0];
}
